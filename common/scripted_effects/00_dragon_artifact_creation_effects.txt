create_artifact_testing_dragon_effect = { #Create at start
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = artifact_test_dragon_name
		description = artifact_test_dragon
		type = dragon
		template = dragon_template
		visuals = riding_dragon
		wealth = scope:wealth
		quality = scope:quality
		modifier = test_dragon_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		# set_variable = { name = historical_unique_artifact value = yes }
		# set_variable = riding_dragon
		save_scope_as = epic
	}
}

create_artifact_water_dragon_effect = { #Create at start
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = artifact_water_dragon_name
		description = artifact_water_dragon
		type = dragon
		template = dragon_template
		visuals = riding_water_dragon
		wealth = scope:wealth
		quality = scope:quality
		modifier = dragon_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		# set_variable = { name = historical_unique_artifact value = yes }
		# set_variable = riding_dragon
		save_scope_as = epic
	}
}

create_artifact_fire_dragon_effect = { #Create at start
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = artifact_fire_dragon_name
		description = artifact_fire_dragon
		type = dragon
		template = dragon_template
		visuals = riding_fire_dragon
		wealth = scope:wealth
		quality = scope:quality
		modifier = dragon_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		# set_variable = { name = historical_unique_artifact value = yes }
		# set_variable = riding_dragon
		save_scope_as = epic
	}
}

create_artifact_stone_dragon_effect = { #Create at start
	# Get the character the artifact is being made for.
	$OWNER$ = { save_scope_as = owner }
	# Not really used, but if we don't set the scopes we get errors in the feature selection
	set_artifact_rarity_illustrious = yes

	# Create the artifact
	create_artifact = {
		name = artifact_stone_dragon_name
		description = artifact_stone_dragon
		type = dragon
		template = dragon_template
		visuals = riding_stone_dragon
		wealth = scope:wealth
		quality = scope:quality
		modifier = dragon_modifier
		save_scope_as = newly_created_artifact
		decaying = no
	}

	scope:newly_created_artifact = {
		# set_variable = { name = historical_unique_artifact value = yes }
		# set_variable = riding_dragon
		save_scope_as = epic
	}
}


# create_artifact_dragon_effect = {
# 	# Get the character the artifact is being made for.
# 	$OWNER$ = { save_scope_as = owner }

# 	hidden_effect_new_artifact = {
# 		# Get artifact quality, wealth, materials, and decorations
# 		get_artifact_quality_effect = yes
# 		get_artifact_wealth_effect = yes

# 		# Create the artifact
# 		create_artifact = {	
# 			name = artifact_dragon_name
# 			description = placeholder # Will be updated in the post-creation effects after decorations are assigned.
# 			template = dragon_template
# 			visuals = dragon_visual
# 			type = dragon
# 			modifier = dragon_modifier
# 			wealth = scope:wealth
# 			quality = scope:quality
# 			save_scope_as = newly_created_artifact
# 			decaying = no
# 		}

# 		scope:newly_created_artifact = {
# 			# Finish generating decorations and update description
# 			if = {
# 				limit = {
# 					has_artifact_feature = dragon_decoration_type
# 				}
# 				set_artifact_feature_group = dragon_type
# 			}
# 			# if = {
# 			# 	limit = {
# 			# 		OR = {
# 			# 			has_artifact_feature = brooch_decoration_adornment
# 			# 			has_artifact_feature = brooch_decoration_centerpiece_and_adornment
# 			# 		}
# 			# 	}
# 			# 	set_artifact_feature_group = brooch_adornment
# 			# }
# 			# if = {
# 			# 	limit = {
# 			# 		OR = {
# 			# 			has_artifact_feature = brooch_decoration_centerpiece
# 			# 			has_artifact_feature = brooch_decoration_centerpiece_and_adornment
# 			# 		}
# 			# 	}
# 			# 	set_artifact_feature_group = brooch_centerpiece
# 			# }
# 			get_artifact_feature_references_effect = yes
# 			set_artifact_description = artifact_dragon_description

# 			# Potential to add custom Dragon modifiers:
# 			# # Add artifact modifiers
# 			# add_scaled_artifact_modifier_minor_prestige_effect = yes
# 			# add_scaled_artifact_modifier_attractiveness_effect = yes

# 			set_variable = {
# 				name = quality
# 				value = scope:quality
# 			}
# 			set_variable = {
# 				name = wealth
# 				value = scope:wealth
# 			}
# 		}
# 	}
# }